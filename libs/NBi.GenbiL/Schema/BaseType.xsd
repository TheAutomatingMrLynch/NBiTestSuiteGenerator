<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="NBi-BaseType" xmlns="http://NBi/TestSuite" xmlns:xs="http://www.w3.org/2001/XMLSchema" elementFormDefault="qualified" targetNamespace="http://NBi/TestSuite">
  <xs:complexType name="parameter-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="xs:string" use="required" />
        <xs:attribute name="remove" type="xs:boolean" use="optional" />
        <xs:attribute name="sql-type" type="xs:string" use="optional" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="variable-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="csv-profile-type">
    <xs:attribute name="field-separator" type="xs:string"/>
    <xs:attribute name="text-qualifier" type="xs:string"/>
    <xs:attribute name="record-separator" type="xs:string"/>
    <xs:attribute name="first-row-header" type="xs:boolean"/>
    <xs:attribute name="empty-cell" type="xs:string"/>
    <xs:attribute name="missing-cell" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="connectionString-type" mixed="true">
    <xs:sequence>
      <xs:element name="environment" minOccurs="0" maxOccurs="1" type="environment-type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name ="default-type">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="1">
        <xs:element type="connectionString-type" minOccurs="0" maxOccurs="1" name="connectionString"/>
        <xs:element type="connectionString-type" minOccurs="0" maxOccurs="1" name="connection-string"/>
      </xs:choice>
      <xs:element type="parameter-type" minOccurs="0" maxOccurs="unbounded" name="parameter"/>
      <xs:element type="variable-type" minOccurs="0" maxOccurs="unbounded" name="variable"/>
      <xs:element type="report-base-type" minOccurs="0" maxOccurs="1" name="report"/>
      <xs:element type="etl-base-type" minOccurs="0" maxOccurs="1" name="etl"/>
    </xs:sequence>
    <xs:attribute name="apply-to" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="everywhere"/>
          <xs:enumeration value="variable"/>
          <xs:enumeration value="system-under-test"/>
          <xs:enumeration value="assert"/>
          <xs:enumeration value="setup-cleanup"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="reference-type">
    <xs:sequence>
      <xs:choice minOccurs="0" maxOccurs="1">
        <xs:element type="connectionString-type" minOccurs="0" maxOccurs="1" name="connectionString"/>
        <xs:element type="connectionString-type" minOccurs="0" maxOccurs="1" name="connection-string"/>
      </xs:choice>
      <xs:element name="regex" minOccurs="0" maxOccurs="1"/>
      <xs:element name="numeric-format" type="numeric-format-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="currency-format" type="currency-format-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="report" type="report-base-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="etl" type="etl-base-type" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="report-base-type">
    <xs:attribute name="source" type="xs:string"/>
    <xs:attribute name="path" type="xs:string"/>
    <xs:attribute name="connectionString" type="xs:string" use="optional"/>
    <xs:attribute name="connection-string" type="xs:string" use="optional"/>
  </xs:complexType>
  <xs:complexType name="numeric-format-type">
    <xs:attribute name="ref" use="optional"/>
    <xs:attribute name="decimal-digits" use="optional"/>
    <xs:attribute name="decimal-separator" use="optional"/>
    <xs:attribute name="group-separator" use="optional"/>
  </xs:complexType>
  <xs:complexType name="currency-format-type">
    <xs:complexContent>
      <xs:extension base="numeric-format-type">
        <xs:attribute name="currency-symbol" type="xs:string" use="optional" />
        <xs:attribute name="currency-pattern" use="optional" >
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="$n"/>
              <xs:enumeration value="n$"/>
              <xs:enumeration value="$ n"/>
              <xs:enumeration value="n $"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="etl-base-type">
    <xs:attribute name="version" type="xs:string"/>
    <xs:attribute name="server" type="xs:string"/>
    <xs:attribute name="catalog" type="xs:string"/>
    <xs:attribute name="folder" type="xs:string"/>
    <xs:attribute name="project" type="xs:string"/>
    <xs:attribute name="environment" type="xs:string"/>
    <xs:attribute name="path" type="xs:string"/>
    <xs:attribute name="name" type="xs:string"/>
    <xs:attribute name="username" type="xs:string"/>
    <xs:attribute name="password" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="etl-type">
    <xs:complexContent>
      <xs:extension base="etl-base-type">
        <xs:sequence>
          <xs:element name="parameter" minOccurs="0" maxOccurs="unbounded" type="parameter-type"/>
        </xs:sequence>
        <xs:attribute name="bits-32" type="xs:boolean"/>
        <xs:attribute name="timeout" type="xs:integer"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="category-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="trait-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" use="required" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="service-type" >
    <xs:attribute name="name" use="required"/>
    <xs:attribute name="timeout-milliseconds" use="optional"/>
  </xs:complexType>
  <xs:complexType name="any-structure-type">
    <xs:attribute name="caption" type="xs:string" use="required" />
    <xs:attribute name="connectionString" type="xs:string" use="optional" />
    <xs:attribute name="connection-string" type="xs:string" use="optional" />
  </xs:complexType>
  <xs:complexType name="perspective-type">
    <xs:complexContent>
      <xs:extension base="any-structure-type">
        <xs:attribute name="owner" type="xs:string" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="measure-group-type">
    <xs:complexContent>
      <xs:extension base="any-structure-type">
        <xs:attribute name="perspective" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="measure-type">
    <xs:complexContent>
      <xs:extension base="measure-group-type">
        <xs:attribute name="measure-group" type="xs:string" use="optional" />
        <xs:attribute name="display-folder" type="xs:string" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="dimension-type">
    <xs:complexContent>
      <xs:extension base="any-structure-type">
        <xs:attribute name="perspective" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="hierarchy-type">
    <xs:complexContent>
      <xs:extension base="dimension-type">
        <xs:attribute name="dimension" type="xs:string" use="required" />
        <xs:attribute name="display-folder" type="xs:string" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="level-type">
    <xs:complexContent>
      <xs:extension base="dimension-type">
        <xs:attribute name="dimension" type="xs:string" use="required" />
        <xs:attribute name="hierarchy" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="property-type">
    <xs:complexContent>
      <xs:extension base="level-type">
        <xs:attribute name="level" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="table-type">
    <xs:complexContent>
      <xs:extension base="perspective-type">
        <xs:attribute name="perspective" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="column-type">
    <xs:complexContent>
      <xs:extension base="table-type">
        <xs:attribute name="table" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="set-type">
    <xs:complexContent>
      <xs:extension base="perspective-type">
        <xs:attribute name="perspective" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="routine-type">
    <xs:complexContent>
      <xs:extension base="perspective-type">
        <xs:attribute name="perspective" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="routine-parameter-type">
    <xs:complexContent>
      <xs:extension base="routine-type">
        <xs:attribute name="routine" type="xs:string" use="required" />
        <xs:attribute name="result" use="optional">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="yes"/>
              <xs:enumeration value="no"/>
              <xs:enumeration value="unspecified"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="direction" use="optional">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="in"/>
              <xs:enumeration value="out"/>
              <xs:enumeration value="in-out"/>
              <xs:enumeration value="unspecified"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="any-structures-type">
    <xs:attribute name="connectionString" type="xs:string" use="optional" />
    <xs:attribute name="connection-string" type="xs:string" use="optional" />
  </xs:complexType>
  <xs:complexType name="perspectives-type">
    <xs:complexContent>
      <xs:extension base="any-structures-type">
        <xs:attribute name="owner" type="xs:string" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="measure-groups-type">
    <xs:complexContent>
      <xs:extension base="any-structures-type">
        <xs:attribute name="perspective" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="measures-type">
    <xs:complexContent>
      <xs:extension base="measure-groups-type">
        <xs:attribute name="measure-group" type="xs:string" use="optional" />
        <xs:attribute name="display-folder" type="xs:string" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="dimensions-type">
    <xs:complexContent>
      <xs:extension base="any-structures-type">
        <xs:attribute name="perspective" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="hierarchies-type">
    <xs:complexContent>
      <xs:extension base="dimensions-type">
        <xs:attribute name="dimension" type="xs:string" use="required" />
        <xs:attribute name="display-folder" type="xs:string" use="optional" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="levels-type">
    <xs:complexContent>
      <xs:extension base="dimensions-type">
        <xs:attribute name="dimension" type="xs:string" use="required" />
        <xs:attribute name="hierarchy" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="properties-type">
    <xs:complexContent>
      <xs:extension base="levels-type">
        <xs:attribute name="level" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="sets-type">
    <xs:complexContent>
      <xs:extension base="perspectives-type">
        <xs:attribute name="perspective" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="tables-type">
    <xs:complexContent>
      <xs:extension base="perspectives-type">
        <xs:attribute name="perspective" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="columns-type">
    <xs:complexContent>
      <xs:extension base="tables-type">
        <xs:attribute name="table" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="routines-type">
    <xs:complexContent>
      <xs:extension base="perspectives-type">
        <xs:attribute name="perspective" type="xs:string" use="required" />
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="routine-parameters-type">
    <xs:complexContent>
      <xs:extension base="routines-type">
        <xs:attribute name="routine" type="xs:string" use="required" />
        <xs:attribute name="result" use="optional">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="yes"/>
              <xs:enumeration value="no"/>
              <xs:enumeration value="unspecified"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
        <xs:attribute name="direction" use="optional">
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="in"/>
              <xs:enumeration value="out"/>
              <xs:enumeration value="in-out"/>
              <xs:enumeration value="unspecified"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="members-type">
    <xs:sequence>
      <xs:choice>
        <xs:element name="hierarchy" type="hierarchy-type"/>
        <xs:element name="level" type="level-type"/>
        <xs:element name="set" type="set-type"/>
      </xs:choice>
      <xs:element name="exclude" minOccurs="0">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="item" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
            <xs:element name="items" minOccurs="0" maxOccurs="unbounded">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="pattern" use="required">
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:enumeration value="start-with"/>
                          <xs:enumeration value="exact"/>
                          <xs:enumeration value="contain"/>
                          <xs:enumeration value="end-with"/>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="children-of" type="xs:string" use="optional" />
  </xs:complexType>
  <xs:complexType name="predefined-type">
    <xs:attribute name="language" type="xs:string" use="required" />
    <xs:attribute name="type" use="required" >
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="days-of-week"/>
          <xs:enumeration value="months-of-year"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="range-integer-type">
    <xs:attribute name="start" type="xs:integer" use="required" />
    <xs:attribute name="end" type="xs:integer" use="required" />
    <xs:attribute name="step" type="xs:integer" use="optional" />
  </xs:complexType>
  <xs:complexType name="range-integer-pattern-type">
    <xs:complexContent>
      <xs:extension base="range-integer-type">
        <xs:attribute name="pattern" type="xs:string" use="required" />
        <xs:attribute name="position" use="required" >
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="suffix"/>
              <xs:enumeration value="prefix"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="range-date-type">
    <xs:attribute name="start" type="xs:date" use="required" />
    <xs:attribute name="end" type="xs:date" use="required" />
    <xs:attribute name="culture" type="xs:string" use="required" />
    <xs:attribute name="format" type="xs:string" use="required" />
  </xs:complexType>
  <xs:complexType name="projection-type">
    <xs:sequence>
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="resultSet" minOccurs="1" maxOccurs="1" type="result-set-type"/>
        <xs:element name="result-set" minOccurs="1" maxOccurs="1" type="result-set-type"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="type" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="row-count"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="comparer-enhanced-type" mixed="true">
    <xs:choice>
      <xs:element name="projection" minOccurs="0" maxOccurs="1" type="projection-type"/>
      <xs:element name="query-scalar" minOccurs="0" maxOccurs="1" type="query-scalar-type"/>
    </xs:choice>
    <xs:attribute name="not" type="xs:boolean" use="optional"/>
  </xs:complexType>
  <xs:complexType name="more-less-enhanced-type" mixed="true">
    <xs:choice>
      <xs:element name="projection" minOccurs="0" maxOccurs="1" type="projection-type"/>
      <xs:element name="query-scalar" minOccurs="0" maxOccurs="1" type="query-scalar-type"/>
    </xs:choice>
    <xs:attribute name="or-equal" type="xs:boolean" use="optional" />
    <xs:attribute name="not" type="xs:boolean" use="optional"/>
  </xs:complexType>
  <xs:complexType name="comparer-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="not" type="xs:boolean" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="more-less-type">
    <xs:simpleContent>
      <xs:extension base="comparer-type">
        <xs:attribute name="or-equal" type="xs:boolean" use="optional" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="two-operands-type">
    <xs:simpleContent>
      <xs:extension base="comparer-type">
        <xs:attribute name="second-operand" type="xs:string" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="no-reference-type">
    <xs:simpleContent>
      <xs:extension base="comparer-type"/>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="empty-type">
    <xs:simpleContent>
      <xs:extension base="no-reference-type">
        <xs:attribute name="or-null" type="xs:boolean" use="optional" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="case-type">
    <xs:simpleContent>
      <xs:extension base="no-reference-type"/>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="text-type">
    <xs:simpleContent>
      <xs:extension base="comparer-type">
        <xs:attribute name="ignore-case" type="xs:boolean" use="optional" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="multitext-type">
    <xs:choice>
      <xs:element name="item" minOccurs="0" maxOccurs="unbounded"/>
    </xs:choice>
    <xs:attribute name="ignore-case" type="xs:boolean" use="optional" />
    <xs:attribute name="not" type="xs:boolean" use="optional"/>
  </xs:complexType>
  <xs:complexType name="culture-specific-type">
    <xs:simpleContent>
      <xs:extension base="comparer-type">
        <xs:attribute name="culture" type="xs:string" use="optional" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="condition-type">
    <xs:sequence minOccurs="1" maxOccurs="unbounded">
      <xs:element name="service-running" type="service-type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="file-exists" type="file-exists-type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="folder-exists" type="folder-exists-type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="custom" type="custom-type" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="custom-type">
    <xs:sequence>
      <xs:element name="parameter" type="custom-parameter-type" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="assembly-path" type="xs:string" use="required"/>
    <xs:attribute name="type" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="custom-parameter-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="file-exists-type">
    <xs:attribute name="path" type="xs:string" use="required"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="not-empty" type="xs:boolean" use="optional"/>
  </xs:complexType>
  <xs:complexType name="folder-exists-type">
    <xs:attribute name="path" type="xs:string" use="required"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="not-empty" type="xs:boolean" use="optional"/>
  </xs:complexType>
  <xs:complexType name="shared-dataset-light-type">
    <xs:attribute name="source" type="xs:string"/>
    <xs:attribute name="path" type="xs:string"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="report-light-type">
    <xs:attribute name="source" type="xs:string"/>
    <xs:attribute name="path" type="xs:string"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="dataset" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="report-type">
    <xs:complexContent>
      <xs:extension base="report-base-type">
        <xs:sequence>
          <xs:element name="parameter" minOccurs="0" maxOccurs="unbounded" type="parameter-type"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
        <xs:attribute name="dataset" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="shared-dataset-type">
    <xs:complexContent>
      <xs:extension base="report-base-type">
        <xs:sequence>
          <xs:element name="parameter" minOccurs="0" maxOccurs="unbounded" type="parameter-type"/>
        </xs:sequence>
        <xs:attribute name="name" type="xs:string" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="assembly-type">
    <xs:sequence>
      <xs:element name="method-parameter" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
              <xs:attribute name="name" type="xs:string" use="required" />
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="path" type="xs:string" use="required" />
    <xs:attribute name="class" type="xs:string" use="required" />
    <xs:attribute name="method" type="xs:string" use="required" />
    <xs:attribute name="connectionString" type="xs:string" use="optional" />
    <xs:attribute name="connection-string" type="xs:string" use="optional" />
    <xs:attribute name="roles" type="xs:string" use="optional" />
    <xs:attribute name="timeout-milliSeconds" type="xs:nonNegativeInteger" use="optional" />
  </xs:complexType>
  <xs:complexType name="query-type" mixed="true">
    <xs:sequence>
      <xs:element name="parameter" minOccurs="0" maxOccurs="unbounded" type="parameter-type"/>
      <xs:element name="variable" minOccurs="0" maxOccurs="unbounded" type="variable-type" />
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="optional" />
    <xs:attribute name="file" type="xs:string" use="optional" />
    <xs:attribute name="connectionString" type="xs:string" use="optional" />
    <xs:attribute name="connection-string" type="xs:string" use="optional" />
    <xs:attribute name="roles" type="xs:string" use="optional" />
    <xs:attribute name="timeout-milliSeconds" type="xs:nonNegativeInteger" use="optional" />
  </xs:complexType>
  <xs:complexType name="query-enhanced-type" mixed="true">
    <xs:complexContent>
      <xs:extension base="query-type">
        <xs:choice>
          <xs:element name="assembly" type="assembly-type" minOccurs="0" maxOccurs="1" />
          <xs:element name="report" type="report-light-type" minOccurs="0" maxOccurs="1" />
          <xs:element name="shared-dataset" type="shared-dataset-light-type" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="query-scalar-type" mixed="true">
    <xs:complexContent>
      <xs:extension base="query-type"/>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="enhanced-transformation-type">
    <xs:simpleContent>
      <xs:extension base="transformation-type">
        <xs:attribute name="column-index" type="xs:integer" use="optional"/>
        <xs:attribute name="column" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="transformation-type">
    <xs:simpleContent>
      <xs:extension base="code-transformation-type">
        <xs:attribute name="original-type" type="column-type-enum" use="optional"/>
        <xs:attribute name="language" use="optional" >
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="c-sharp"/>
              <xs:enumeration value="ncalc"/>
              <xs:enumeration value="format"/>
              <xs:enumeration value="native"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:simpleType name="code-transformation-type">
    <xs:union memberTypes="not-native-transformation-type native-transformation-type"/>
  </xs:simpleType>
  <xs:simpleType name="native-transformation-type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="blank-to-empty"/>
      <xs:enumeration value="blank-to-null"/>
      <xs:enumeration value="empty-to-null"/>
      <xs:enumeration value="null-to-empty"/>
      <xs:enumeration value="null-to-value"/>
      <xs:enumeration value="null-to-zero"/>
      <xs:enumeration value="value-to-value"/>
      <xs:enumeration value="any-to-any"/>
      <xs:enumeration value="text-to-trim"/>
      <xs:enumeration value="text-to-upper"/>
      <xs:enumeration value="text-to-lower"/>
      <xs:enumeration value="text-to-prefix("/>
      <xs:enumeration value="text-to-suffix("/>
      <xs:enumeration value="text-to-length"/>
      <xs:enumeration value="text-to-html"/>
      <xs:enumeration value="text-to-without-diacritics"/>
      <xs:enumeration value="text-to-token-count"/>
      <xs:enumeration value="text-to-without-whitespaces"/>
      <xs:enumeration value="text-to-first-chars("/>
      <xs:enumeration value="text-to-last-chars("/>
      <xs:enumeration value="text-to-skip-first-chars("/>
      <xs:enumeration value="text-to-skip-last-chars("/>
      <xs:enumeration value="text-to-pad-left("/>
      <xs:enumeration value="text-to-pad-right("/>
      <xs:enumeration value="text-to-remove-chars("/>
      <xs:enumeration value="text-to-dateTime("/>
      <xs:enumeration value="text-to-mask("/>
      <xs:enumeration value="mask-to-text("/>
      <xs:enumeration value="html-to-text"/>
      <xs:enumeration value="date-to-age"/>
      <xs:enumeration value="utc-to-local("/>
      <xs:enumeration value="local-to-utc("/>
      <xs:enumeration value="dateTime-to-date"/>
      <xs:enumeration value="null-to-date("/>
      <xs:enumeration value="dateTime-to-first-of-month"/>
      <xs:enumeration value="dateTime-to-last-of-month"/>
      <xs:enumeration value="dateTime-to-first-of-year"/>
      <xs:enumeration value="dateTime-to-last-of-year"/>
      <xs:enumeration value="dateTime-to-next-day"/>
      <xs:enumeration value="dateTime-to-previous-day"/>
      <xs:enumeration value="dateTime-to-next-month"/>
      <xs:enumeration value="dateTime-to-previous-month"/>
      <xs:enumeration value="dateTime-to-next-year"/>
      <xs:enumeration value="dateTime-to-previous-year"/>
      <xs:enumeration value="dateTime-to-floor-hour"/>
      <xs:enumeration value="dateTime-to-ceiling-hour"/>
      <xs:enumeration value="dateTime-to-floor-minute"/>
      <xs:enumeration value="dateTime-to-ceiling-minute"/>
      <xs:enumeration value="dateTime-to-set-time("/>
      <xs:enumeration value="dateTime-to-add("/>
      <xs:enumeration value="dateTime-to-subtract("/>
      <xs:enumeration value="numeric-to-round("/>
      <xs:enumeration value="numeric-to-floor"/>
      <xs:enumeration value="numeric-to-ceiling"/>
      <xs:enumeration value="numeric-to-integer"/>
      <xs:enumeration value="numeric-to-increment"/>
      <xs:enumeration value="numeric-to-decrement"/>
      <xs:enumeration value="numeric-to-add("/>
      <xs:enumeration value="numeric-to-subtract("/>
      <xs:enumeration value="numeric-to-multiply("/>
      <xs:enumeration value="numeric-to-divide("/>
      <xs:enumeration value="numeric-to-invert"/>
      <xs:enumeration value="path-to-filename"/>
      <xs:enumeration value="path-to-filename-without-extension"/>
      <xs:enumeration value="path-to-extension"/>
      <xs:enumeration value="path-to-root"/>
      <xs:enumeration value="path-to-directory"/>
      <xs:enumeration value="file-to-size"/>
      <xs:enumeration value="file-to-creation-dateTime"/>
      <xs:enumeration value="file-to-creation-dateTime-utc"/>
      <xs:enumeration value="file-to-update-dateTime"/>
      <xs:enumeration value="file-to-update-dateTime-utc"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="not-native-transformation-type">
    <xs:restriction base="xs:string"/>
  </xs:simpleType>
  <xs:complexType name="summarization-type">
    <xs:sequence>
      <xs:choice>
        <xs:element name="sum" type="column-aggregation-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="average" type="column-aggregation-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="max" type="column-aggregation-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="min" type="column-aggregation-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="count" type="aggregation-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="concatenation" type="concatenation-type" minOccurs="0" maxOccurs="1"/>
      </xs:choice>
      <xs:element name="group-by" type="group-by-type" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="aggregation-type">
    <xs:simpleContent>
      <xs:extension base="code-transformation-type">
        <xs:attribute name="type" type="column-type-enum" use="required" />
        <xs:attribute name="if-empty-series" use="optional" />
        <xs:attribute name="if-missing-values" use="optional" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="column-aggregation-type">
    <xs:simpleContent>
      <xs:extension base="aggregation-type">
        <xs:attribute name="column" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="concatenation-type">
    <xs:simpleContent>
      <xs:extension base="column-aggregation-type">
        <xs:attribute name="separator" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="select-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="evaluate" type="xs:boolean" use="optional"/>
        <xs:attribute name="attribute" type="xs:string" use="optional"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="xpath-type">
    <xs:sequence>
      <xs:element name="from" minOccurs="1" maxOccurs="1" type="xs:string"/>
      <xs:element name="select" minOccurs="1" maxOccurs="unbounded" type="select-type" />
    </xs:sequence>
    <xs:attribute name="default-namespace-prefix" use="optional" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="json-path-type">
    <xs:sequence>
      <xs:element name="from" minOccurs="1" maxOccurs="1" type="xs:string"/>
      <xs:element name="select" minOccurs="1" maxOccurs="unbounded" type="xs:string" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="xml-source-type">
    <xs:sequence>
      <xs:choice>
        <xs:element name="file" minOccurs="1" maxOccurs="1" type="file-compatible-type"/>
        <xs:element name="url" minOccurs="1" maxOccurs="1" type="xs:string"/>
        <xs:element name="rest" minOccurs="1" maxOccurs="1" type="rest-type"/>
      </xs:choice>
      <xs:element name="xpath" minOccurs="1" maxOccurs="1" type="xpath-type" />
    </xs:sequence>
    <xs:attribute name="ignore-namespace" type="xs:boolean" use="optional" />
  </xs:complexType>
  <xs:complexType name="rest-type">
    <xs:sequence>
      <xs:element name="authentication" minOccurs="0" maxOccurs="1" type="authentication-type"/>
      <xs:element name="header" minOccurs="0" maxOccurs="unbounded" type="rest-header-type"/>
      <xs:element name="path" minOccurs="0" maxOccurs="1" type="xs:string"/>
      <xs:element name="segment" minOccurs="0" maxOccurs="unbounded" type="rest-segment-type"/>
      <xs:element name="parameter" minOccurs="0" maxOccurs="unbounded" type="rest-parameter-type"/>
    </xs:sequence>
    <xs:attribute name="base-address" type="xs:string" use="required" />
  </xs:complexType>
  <xs:complexType name="authentication-type">
    <xs:choice>
      <xs:element name="anonymous" type="xs:string" fixed=""/>
      <xs:element name="api-key">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
              <xs:attribute name="name" type="xs:string" use="optional"/>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="http-basic">
        <xs:complexType>
          <xs:attribute name="username" type="xs:string" use="required"/>
          <xs:attribute name="password" type="xs:string" use="required"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="ntml-current-user" type="xs:string" fixed=""/>
      <xs:element name="ntml">
        <xs:complexType>
          <xs:attribute name="username" type="xs:string" use="required"/>
          <xs:attribute name="password" type="xs:string" use="required"/>
        </xs:complexType>
      </xs:element>
      <xs:element name="oauth2">
        <xs:complexType>
          <xs:sequence>
            <xs:element name="access-token" type="xs:string" minOccurs="1" maxOccurs="1"/>
          </xs:sequence>
          <xs:attribute name="token-type" type="xs:string" use="optional"/>
        </xs:complexType>
      </xs:element>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="rest-header-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="rest-parameter-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="rest-segment-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" type="xs:string" use="required" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="json-source-type">
    <xs:sequence>
      <xs:choice>
        <xs:element name="file" minOccurs="1" maxOccurs="1" type="xs:string"/>
        <xs:element name="url" minOccurs="1" maxOccurs="1" type="xs:string"/>
        <xs:element name="rest" minOccurs="1" maxOccurs="1" type="rest-type"/>
        <xs:element name="query-scalar" minOccurs="1" maxOccurs="1" type="query-scalar-type"/>
      </xs:choice>
      <xs:element name="json-path" minOccurs="1" maxOccurs="1" type="json-path-type" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="decoration-type">
    <xs:sequence minOccurs="1" maxOccurs="unbounded">
      <xs:choice>
        <xs:element name="sql-run" type="sql-run-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="service-start" type="service-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="service-stop" type="service-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="table-reset" type="table-reset-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="table-load" type="table-load-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="exe-run" type="exe-run-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="exe-kill" type="exe-kill-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="wait" type="wait-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="connection-wait" type="connection-wait-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="file-delete" type="file-delete-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="file-delete-pattern" type="file-delete-pattern-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="file-delete-extension" type="file-delete-extension-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="file-copy" type="file-copy-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="file-copy-extension" type="file-copy-extension-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="file-copy-pattern" type="file-copy-pattern-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="etl-run" type="etl-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="custom" type="custom-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="tasks" type="tasks-type" minOccurs="0" maxOccurs="unbounded"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="tasks-type">
    <xs:sequence minOccurs="1" maxOccurs="unbounded">
      <xs:choice>
        <xs:element name="sql-run" type="sql-run-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="service-start" type="service-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="service-stop" type="service-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="table-reset" type="table-reset-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="table-load" type="table-load-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="exe-run" type="exe-run-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="exe-kill" type="exe-kill-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="wait" type="wait-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="connection-wait" type="connection-wait-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="file-delete" type="file-delete-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="file-delete-pattern" type="file-delete-pattern-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="file-delete-extension" type="file-delete-extension-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="file-copy" type="file-copy-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="file-copy-extension" type="file-copy-extension-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="file-copy-pattern" type="file-copy-pattern-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="custom" type="custom-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="etl-run" type="etl-type" minOccurs="0" maxOccurs="unbounded"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="parallel" use="optional" type="xs:boolean"/>
    <xs:attribute name="run-once" use="optional" type="xs:boolean"/>
  </xs:complexType>
  <xs:complexType name="table-reset-type">
    <xs:attribute name="connectionString" type="xs:string" use="optional"/>
    <xs:attribute name="connection-string" type="xs:string" use="optional"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="table-load-type" >
    <xs:complexContent>
      <xs:extension base="table-reset-type">
        <xs:attribute name="file" type="xs:string" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="sql-run-type" >
    <xs:attribute name="connectionString" type="xs:string" use="optional"/>
    <xs:attribute name="connection-string" type="xs:string" use="optional"/>
    <xs:attribute name="path" type="xs:string" use="optional"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="version" type="xs:string" use="optional"/>
  </xs:complexType>
  <xs:complexType name="file-delete-type">
    <xs:attribute name="path" type="xs:string" use="required"/>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="file-delete-pattern-type">
    <xs:attribute name="path" type="xs:string" use="required"/>
    <xs:attribute name="pattern" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="file-delete-extension-type">
    <xs:attribute name="path" type="xs:string" use="required"/>
    <xs:attribute name="extension" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="file-copy-type" >
    <xs:complexContent>
      <xs:extension base="file-delete-type">
        <xs:attribute name="source-path" type="xs:string" use="required"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="file-copy-pattern-type" >
    <xs:attribute name="source-path" type="xs:string" use="required"/>
    <xs:attribute name="destination-path" type="xs:string" use="required"/>
    <xs:attribute name="pattern" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="file-copy-extension-type" >
    <xs:attribute name="source-path" type="xs:string" use="required"/>
    <xs:attribute name="destination-path" type="xs:string" use="required"/>
    <xs:attribute name="extension" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="exe-run-type" >
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="path" type="xs:string" use="optional"/>
    <xs:attribute name="arguments" type="xs:string" use="optional"/>
    <xs:attribute name="timeout-milliseconds" type="xs:nonNegativeInteger" use="optional"/>
  </xs:complexType>
  <xs:complexType name="exe-kill-type" >
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="wait-type" >
    <xs:attribute name="milliseconds" type="xs:positiveInteger" use="required"/>
  </xs:complexType>
  <xs:complexType name="connection-wait-type" >
    <xs:attribute name="timeout-milliseconds"  type="xs:positiveInteger" use="optional"/>
    <xs:attribute name="connectionString" type="xs:string" use="optional"/>
    <xs:attribute name="connection-string" type="xs:string" use="optional"/>
  </xs:complexType>
  <xs:complexType name="settings-type">
    <xs:sequence>
      <xs:element name="default" type="default-type" minOccurs="0" maxOccurs="4"/>
      <xs:element name="reference" type="reference-type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="parallelize-queries" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:boolean">
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="csv-profile" type="csv-profile-type" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="test-type">
    <xs:sequence>
      <xs:element name="instance-settling" type="instance-settling-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ignore" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="description" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:element name="edition" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:sequence minOccurs="0" maxOccurs="unbounded">
            <xs:element name="update">
              <xs:complexType>
                <xs:simpleContent>
                  <xs:extension base="xs:string">
                    <xs:attribute name="contributor" type="xs:string" use="optional" />
                    <xs:attribute name="timestamp" type="xs:dateTime" use="required" />
                  </xs:extension>
                </xs:simpleContent>
              </xs:complexType>
            </xs:element>
          </xs:sequence>
          <xs:attribute name="author" type="xs:string" use="optional" />
          <xs:attribute name="created" type="xs:dateTime" use="optional" />
        </xs:complexType>
      </xs:element>
      <xs:element name="category"  type="category-type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="trait"  type="trait-type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:choice>
        <xs:sequence>
          <xs:element name="condition" type="condition-type" minOccurs="0" maxOccurs="1"/>
          <xs:element name="setup" type="decoration-type" minOccurs="0" maxOccurs="1"/>
          <xs:element name="system-under-test" minOccurs="1" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice>
                <xs:element name="execution">
                  <xs:complexType>
                    <xs:choice>
                      <xs:element name="query" type ="query-type"/>
                      <xs:element name="report" type ="report-type"/>
                      <xs:element name="shared-dataset" type ="shared-dataset-type"/>
                      <xs:element name="assembly" type ="assembly-type"/>
                      <xs:element name="etl" type ="etl-type"/>
                    </xs:choice>
                  </xs:complexType>
                </xs:element>
                <xs:element name="resultSet" type="result-set-type"/>
                <xs:element name="result-set" type="result-set-type"/>
                <xs:element name="scalar" type="scalar-type"/>
                <xs:element name="members" type="members-type"/>
                <xs:element name="structure">
                  <xs:complexType>
                    <xs:choice>
                      <xs:element name="perspective" type="perspective-type"/>
                      <xs:element name="measure-group" type="measure-group-type"/>
                      <xs:element name="measure" type="measure-type"/>
                      <xs:element name="dimension" type="dimension-type"/>
                      <xs:element name="hierarchy" type="hierarchy-type"/>
                      <xs:element name="level" type="level-type"/>
                      <xs:element name="property" type="property-type"/>
                      <xs:element name="set" type="set-type"/>
                      <xs:element name="table" type="table-type"/>
                      <xs:element name="column" type="column-type"/>
                      <xs:element name="routine" type="routine-type"/>
                      <xs:element name="parameter" type="routine-parameter-type"/>
                      <xs:element name="perspectives" type="perspectives-type"/>
                      <xs:element name="measure-groups" type="measure-groups-type"/>
                      <xs:element name="measures" type="measures-type"/>
                      <xs:element name="dimensions" type="dimensions-type"/>
                      <xs:element name="hierarchies" type="hierarchies-type"/>
                      <xs:element name="levels" type="levels-type"/>
                      <xs:element name="properties" type="properties-type"/>
                      <xs:element name="sets" type="sets-type"/>
                      <xs:element name="tables" type="tables-type"/>
                      <xs:element name="columns" type="columns-type"/>
                      <xs:element name="routines" type="routines-type"/>
                      <xs:element name="parameters" type="routine-parameters-type"/>
                    </xs:choice>
                  </xs:complexType>
                </xs:element>
                <xs:element name="data-type">
                  <xs:complexType>
                    <xs:choice>
                      <!--<xs:element name="measure" type="measure-type"/>
                  <xs:element name="property" type="property-type"/>-->
                      <xs:element name="column" type="column-type"/>
                    </xs:choice>
                  </xs:complexType>
                </xs:element>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="assert" minOccurs="1" maxOccurs="unbounded">
            <xs:complexType>
              <xs:choice>
                <xs:element name="equalTo" type="result-set-comparison-type"/>
                <xs:element name="equal-to" type="result-set-comparison-type"/>
                <xs:element name="subset-of" type="result-set-comparison-type"/>
                <xs:element name="superset-of" type="result-set-comparison-type"/>
                <xs:element name="intersection-of" type="result-set-comparison-type"/>
                <xs:element name="evaluate-rows">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="variable" minOccurs="0" maxOccurs="unbounded">
                        <xs:complexType>
                          <xs:simpleContent>
                            <xs:extension base="xs:string">
                              <xs:attribute name="column-index" type="xs:integer" use="required"/>
                            </xs:extension>
                          </xs:simpleContent>
                        </xs:complexType>
                      </xs:element>
                      <xs:element name="expression" type="expression1-type" minOccurs="1" maxOccurs="unbounded"/>
                    </xs:sequence>
                  </xs:complexType>
                </xs:element>
                <xs:element name="syntacticallyCorrect"/>
                <xs:element name="syntactically-correct"/>
                <xs:element name="fasterThan" type="faster-than-type"/>
                <xs:element name="faster-than" type="faster-than-type"/>
                <xs:element name="count">
                  <xs:complexType>
                    <xs:simpleContent>
                      <xs:extension base="xs:string">
                        <xs:attribute name="exactly" type="xs:unsignedShort" use="optional" />
                        <xs:attribute name="more-than" type="xs:unsignedShort" use="optional" />
                        <xs:attribute name="less-than" type="xs:unsignedShort" use="optional" />
                      </xs:extension>
                    </xs:simpleContent>
                  </xs:complexType>
                </xs:element>
                <xs:element name="contain">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:choice>
                        <xs:sequence>
                          <xs:element name="item" minOccurs="0" maxOccurs="unbounded">
                            <xs:complexType>
                              <xs:simpleContent>
                                <xs:extension base="xs:string"/>
                              </xs:simpleContent>
                            </xs:complexType>
                          </xs:element>
                          <xs:choice minOccurs="0">
                            <xs:element name="predefined" type="predefined-type"/>
                            <xs:element name="range-integer" type="range-integer-type"/>
                            <xs:element name="range-date" type="range-date-type"/>
                            <xs:element name="range-integer-pattern" type="range-integer-pattern-type"/>
                          </xs:choice>
                        </xs:sequence>
                        <xs:element name="one-column-query" type ="query-type"/>
                        <xs:element name="members" type="members-type"/>
                      </xs:choice>
                    </xs:sequence>
                    <xs:attribute name="caption" type="xs:string" use="optional" />
                    <xs:attribute name="ignore-case" type="xs:boolean" use="optional" />
                    <xs:attribute name="not" type="xs:boolean" use="optional" />
                  </xs:complexType>
                </xs:element>
                <xs:element name="equivalentTo" type="equivalent-to-type"/>
                <xs:element name="equivalent-to" type="equivalent-to-type"/>
                <xs:element name="subsetOf" type="contained-in-type" />
                <xs:element name="contained-in" type="contained-in-type" />
                <xs:element name="exists">
                  <xs:complexType>
                    <xs:simpleContent>
                      <xs:extension base="xs:string">
                        <xs:attribute name="ignore-case" type="xs:boolean" use="optional" />
                        <xs:attribute name="not" type="xs:boolean" use="optional" />
                      </xs:extension>
                    </xs:simpleContent>
                  </xs:complexType>
                </xs:element>
                <xs:element name="is">
                  <xs:complexType>
                    <xs:simpleContent>
                      <xs:extension base="xs:string">
                        <xs:attribute name="not" type="xs:boolean" use="optional" />
                      </xs:extension>
                    </xs:simpleContent>
                  </xs:complexType>
                </xs:element>
                <xs:element name="ordered">
                  <xs:complexType>
                    <xs:choice>
                      <xs:element name="rule-definition" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                          <xs:sequence>
                            <xs:element name="item" minOccurs="0" maxOccurs="unbounded">
                              <xs:complexType>
                                <xs:simpleContent>
                                  <xs:extension base="xs:string"/>
                                </xs:simpleContent>
                              </xs:complexType>
                            </xs:element>
                          </xs:sequence>
                        </xs:complexType>
                      </xs:element>
                      <xs:element name="one-column-query" minOccurs="0" maxOccurs="1" type ="query-type"/>
                    </xs:choice>
                    <xs:attribute name="descending" type="xs:boolean" use="optional" />
                    <xs:attribute name="rule" use="optional" >
                      <xs:simpleType>
                        <xs:restriction base="xs:string">
                          <xs:enumeration value="alphabetical"/>
                          <xs:enumeration value="chronological"/>
                          <xs:enumeration value="numerical"/>
                          <xs:enumeration value="specific"/>
                        </xs:restriction>
                      </xs:simpleType>
                    </xs:attribute>
                  </xs:complexType>
                </xs:element>
                <xs:element name="linkedTo">
                  <xs:complexType>
                    <xs:choice>
                      <xs:element name="dimension" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                          <xs:attribute name="caption" type="xs:string" use="required"/>
                        </xs:complexType>
                      </xs:element>
                      <xs:element name="measure-group" minOccurs="0" maxOccurs="1">
                        <xs:complexType>
                          <xs:attribute name="caption" type="xs:string" use="required"/>
                        </xs:complexType>
                      </xs:element>
                    </xs:choice>
                  </xs:complexType>
                </xs:element>
                <xs:element name="matchPattern">
                  <xs:complexType>
                    <xs:choice>
                      <xs:element name="regex" minOccurs="0" maxOccurs="1"/>
                      <xs:element name="numeric-format" type="numeric-format-type" minOccurs="0" maxOccurs="1"/>
                      <xs:element name="currency-format" type="currency-format-type" minOccurs="0" maxOccurs="1"/>
                    </xs:choice>
                  </xs:complexType>
                </xs:element>
                <xs:element name="successful">
                  <xs:complexType>
                    <xs:attribute name="not" type="xs:boolean" use="optional"/>
                  </xs:complexType>
                </xs:element>
                <xs:element name="row-count">
                  <xs:complexType>
                    <xs:sequence>
                      <xs:element name="filter" type="filter-base-type" minOccurs="0" maxOccurs="1"/>
                      <xs:choice>
                        <xs:element name="less-than" type="more-less-enhanced-type" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="more-than" type="more-less-enhanced-type" minOccurs="0" maxOccurs="1"/>
                        <xs:element name="equal" type="comparer-enhanced-type" minOccurs="0" maxOccurs="1"/>
                      </xs:choice>
                    </xs:sequence>
                    <xs:attribute name="not" type="xs:boolean" use="optional"/>
                  </xs:complexType>
                </xs:element>
                <xs:element name="all-rows" type="filter-base-type"/>
                <xs:element name="no-rows" type="filter-base-type"/>
                <xs:element name="some-rows" type="filter-base-type"/>
                <xs:element name="single-row" type="filter-base-type"/>
                <xs:element name="unique-rows" type="unique-rows-type"/>
                <xs:element name="lookup-exists" type="lookup-exists-type"/>
                <xs:element name="lookup-matches" type="lookup-matches-type"/>
                <xs:element name="score" type="score-type"/>
              </xs:choice>
            </xs:complexType>
          </xs:element>
          <xs:element name="cleanup" type="decoration-type" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
        <xs:sequence>
          <xs:element name="not-implemented" minOccurs="1"/>
          <xs:any minOccurs="0" maxOccurs="unbounded" processContents="skip"/>
        </xs:sequence>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required" />
    <xs:attribute name="uid" type="xs:unsignedInt" use="optional" />
    <xs:attribute name="ignore" type="xs:boolean" use="optional" />
    <xs:attribute name="description" type="xs:string" use="optional" />
  </xs:complexType>
  <xs:complexType name="instance-settling-type">
    <xs:sequence minOccurs="1" maxOccurs="1">
      <xs:element name="local-variable" type="local-variable-type" minOccurs="1" maxOccurs="1"/>
      <xs:element name="derived-variable" type="derived-variable-type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="category" type="xs:string" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="trait" type="trait-type" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="derived-variable-type">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:element name="script" type="script-type" minOccurs="1" maxOccurs="1"/>
    </xs:choice>
    <xs:attribute name="name" type="xs:string" use="required"/>
    <xs:attribute name="type" type="column-type-enum" use="optional"/>
    <xs:attribute name="based-on" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="sequence-type">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:element name="loop-sentinel" type="loop-sentinel-type"/>
      <xs:element name="loop-file" type="loop-file-type"/>
      <xs:element name="query-sequence" type="query-type"/>
      <xs:element name="item" type="xs:string" minOccurs="1" maxOccurs="unbounded"/>
      <xs:element name="custom" type="custom-type" />
    </xs:choice>
    <xs:attribute name="name" type="xs:string"/>
    <xs:attribute name="type" type="column-type-enum"/>
  </xs:complexType>
  <xs:complexType name="local-variable-type">
    <xs:complexContent>
      <xs:extension base="sequence-type">
        <xs:sequence>
          <xs:element name="filter" type="filter-light-type" minOccurs="0" maxOccurs="1"/>
        </xs:sequence>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="loop-sentinel-type">
    <xs:attribute name="seed" type="xs:string"/>
    <xs:attribute name="terminal" type="xs:string"/>
    <xs:attribute name="step" type="xs:string"/>
    <xs:attribute name="interval" type="interval-mode-enum" use="optional"/>
  </xs:complexType>
  <xs:simpleType name="interval-mode-enum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="close"/>
      <xs:enumeration value="half-open"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="loop-file-type">
    <xs:attribute name="path" type="xs:string" use="required"/>
    <xs:attribute name="pattern" type="xs:string" use="optional"/>
  </xs:complexType>
  <xs:simpleType name="column-type-enum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="numeric"/>
      <xs:enumeration value="text"/>
      <xs:enumeration value="dateTime"/>
      <xs:enumeration value="boolean"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="group-type">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="category" type="category-type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="setup" type="decoration-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="cleanup" type="decoration-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="test" type="test-type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="group" type="group-type" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required" />
  </xs:complexType>
  <xs:complexType name="alias-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="column-index" type="xs:integer" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="expression1-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="column-index" type="xs:integer" use="required"/>
        <xs:attribute name="type" type="column-type-enum" use="optional"/>
        <xs:attribute name="tolerance" type="xs:string" use="optional" />
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="expression2-type" mixed="true">
    <xs:sequence>
      <xs:element name="script" type="script-type" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="predicate-type">
    <xs:choice>
      <xs:element name="less-than" type="more-less-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="more-than" type="more-less-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="equal" type="comparer-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="null" type="no-reference-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="empty" type="empty-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="lower-case" type="case-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="upper-case" type="case-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="starts-with" type="text-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="ends-with" type="text-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="contains" type="text-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="matches-regex" type="text-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="matches-numeric" type="culture-specific-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="matches-date" type="culture-specific-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="matches-time" type="culture-specific-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="matches-dateTime" type="culture-specific-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="within-range" type="comparer-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="within-list" type="multitext-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="any-of" type="multitext-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="integer" type="no-reference-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="modulo" type="two-operands-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="on-the-day" type="no-reference-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="on-the-hour" type="no-reference-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="on-the-minute" type="no-reference-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="true" type="no-reference-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="false" type="no-reference-type" minOccurs="0" maxOccurs="1"/>
    </xs:choice>
    <xs:attribute name="name" type="xs:string" use="optional"/>
    <xs:attribute name="operand" type="xs:string" use="optional"/>
    <!--<xs:attribute name="column-index" type="xs:nonNegativeInteger" use="optional"/>-->
    <!--<xs:attribute name="not" type="xs:boolean" use="optional/>-->
    <xs:attribute name="type" type="column-type-enum" use="optional"/>
  </xs:complexType>
  <xs:complexType name="combination-predicate-type">
    <xs:sequence>
      <xs:element name="predicate" type="predicate-type" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="operator" use="required">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="or"/>
          <xs:enumeration value="xor"/>
          <xs:enumeration value="and"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="not" type="xs:boolean" use="optional"/>
  </xs:complexType>
  <xs:complexType name="filter-light-type">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:choice>
        <xs:element name="predicate" type="predicate-type" minOccurs="0" maxOccurs="1"/>
      </xs:choice>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="filter-base-type">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:sequence minOccurs="0" maxOccurs="unbounded">
        <xs:element name="alias" type="alias-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="variable" type="alias-type" minOccurs="0" maxOccurs="unbounded"/>
        <xs:element name="expression" type="expression2-type" minOccurs="0" maxOccurs="1"/>
        <xs:choice>
          <xs:element name="predicate" type="predicate-type" minOccurs="0" maxOccurs="1"/>
          <xs:element name="combination" type="combination-predicate-type" minOccurs="0" maxOccurs="1"/>
        </xs:choice>
      </xs:sequence>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="filter-type">
    <xs:complexContent>
      <xs:extension base="filter-base-type">
        <xs:choice minOccurs="0" maxOccurs="1">
          <xs:element name="ranking" type="ranking-type"/>
          <xs:element name="unique" type="unique-type"/>
        </xs:choice>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="ranking-type">
    <xs:sequence minOccurs="1" maxOccurs="1">
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="top" type="rank-type"/>
        <xs:element name="bottom" type="rank-type"/>
      </xs:choice>
      <xs:element name="group-by" type="group-by-type" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="operand" type="xs:string" use="required"/>
    <xs:attribute name="type" type="column-type-enum"/>
  </xs:complexType>
  <xs:complexType name="unique-type">
    <xs:sequence minOccurs="1" maxOccurs="1">
      <xs:element name="group-by" type="group-by-type" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rank-type">
    <xs:attribute name="count" type="xs:positiveInteger" use="optional"/>
  </xs:complexType>
  <xs:complexType name="group-by-type">
    <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="column" type="definition-column-base-type" minOccurs="1" maxOccurs="unbounded"/>
        <xs:element name="case" type="group-by-case-type" minOccurs="1" maxOccurs="unbounded"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name ="group-by-case-type">
    <xs:choice>
      <xs:element name="predicate" type="predicate-type"/>
      <xs:element name="combination" type="combination-predicate-type"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="unique-rows-type">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:element name="column" type="definition-column-type" />
    </xs:sequence>
    <xs:attribute name="keys" type="keys-set-type" use="optional" />
    <xs:attribute name="values" type="values-set-type" use="optional" />
  </xs:complexType>
  <xs:group name="base-lookup-group">
    <xs:sequence>
      <xs:element name="join" type="join-type" minOccurs="1" maxOccurs="1" />
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="resultSet" type="result-set-type" minOccurs="1" maxOccurs="1"/>
        <xs:element name="result-set" type="result-set-type" minOccurs="1" maxOccurs="1"/>
      </xs:choice>
    </xs:sequence>
  </xs:group>
  <xs:complexType name="lookup-matches-type">
    <xs:sequence>
      <xs:element name="join" type="join-type" minOccurs="1" maxOccurs="1" />
      <xs:element name="inclusion" type="inclusion-type" minOccurs="1" maxOccurs="1" />
      <xs:choice minOccurs="1" maxOccurs="1">
        <xs:element name="resultSet" type="result-set-type" minOccurs="1" maxOccurs="1"/>
        <xs:element name="result-set" type="result-set-type" minOccurs="1" maxOccurs="1"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="lookup-exists-type">
    <xs:sequence>
      <xs:group ref="base-lookup-group"/>
    </xs:sequence>
    <xs:attribute name="reverse" type="xs:boolean"/>
  </xs:complexType>
  <xs:complexType name="lookup-replace-type">
    <xs:sequence>
      <xs:element name="missing" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
              <xs:attribute name="behavior">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:enumeration value="failure"/>
                    <xs:enumeration value="original-value"/>
                    <xs:enumeration value="default-value"/>
                    <xs:enumeration value="discard-row"/>
                  </xs:restriction>
                </xs:simpleType>
              </xs:attribute>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
      <xs:group ref="base-lookup-group"/>
      <xs:element name="replacement" type="definition-column-base-type" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="join-type">
    <xs:sequence>
      <xs:element name="using" type="column-using-type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="mapping" type="column-mapping-type" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="inclusion-type">
    <xs:sequence>
      <xs:element name="using" type="extended-column-using-type" minOccurs="0" maxOccurs="unbounded"/>
      <xs:element name="mapping" type="extended-column-mapping-type" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="column-using-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="type" use="optional" >
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="text"/>
              <xs:enumeration value="numeric"/>
              <xs:enumeration value="dateTime"/>
              <xs:enumeration value="boolean"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="extended-column-using-type">
    <xs:simpleContent>
      <xs:extension base="column-using-type">
        <xs:attribute name="tolerance" use="optional" type="xs:string"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="column-mapping-type">
    <xs:attribute name="candidate" type="xs:string" use="required"/>
    <xs:attribute name="reference" type="xs:string" use="required"/>
    <xs:attribute name="type" use="optional" >
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="text"/>
          <xs:enumeration value="numeric"/>
          <xs:enumeration value="dateTime"/>
          <xs:enumeration value="boolean"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="extended-column-mapping-type">
    <xs:complexContent>
      <xs:extension base="column-mapping-type">
        <xs:attribute name="tolerance" use="optional" type="xs:string"/>
      </xs:extension>
    </xs:complexContent>
  </xs:complexType>
  <xs:complexType name="score-type">
    <xs:attribute name="threshold" use="optional"/>
  </xs:complexType>
  <xs:complexType name="contained-in-type">
    <xs:sequence>
      <xs:choice>
        <xs:sequence>
          <xs:element name="item" minOccurs="0" maxOccurs="unbounded">
            <xs:complexType>
              <xs:simpleContent>
                <xs:extension base="xs:string"/>
              </xs:simpleContent>
            </xs:complexType>
          </xs:element>
          <xs:choice minOccurs="0">
            <xs:element name="predefined" type="predefined-type"/>
            <xs:element name="range-integer" type="range-integer-type"/>
            <xs:element name="range-date" type="range-date-type"/>
            <xs:element name="range-integer-pattern" type="range-integer-pattern-type"/>
          </xs:choice>
        </xs:sequence>
        <xs:element name="one-column-query" type ="query-type"/>
        <xs:element name="members" type="members-type"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="ignore-case" type="xs:boolean" use="optional" />
    <xs:attribute name="not" type="xs:boolean" use="optional" />
  </xs:complexType>
  <xs:complexType name="result-set-type">
    <xs:sequence>
      <xs:choice>
        <xs:sequence>
          <xs:element name="iteration" minOccurs="1" maxOccurs="1" type="iteration-type"/>
          <xs:element name="result-set" minOccurs="1" maxOccurs="1" type="result-set-type"/>
        </xs:sequence>
        <xs:element name="row" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="cell" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:simpleContent>
                    <xs:extension base="xs:string">
                      <xs:attribute name="column-name" type="xs:string" use="optional" />
                    </xs:extension>
                  </xs:simpleContent>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="query" minOccurs="0" maxOccurs="1" type="query-enhanced-type"/>
        <xs:element name="sequences-combination" minOccurs="0" maxOccurs="1" type="sequences-combination-type"/>
        <xs:element name="sequence" minOccurs="0" maxOccurs="1" type="sequence-type"/>
        <xs:element name="file" minOccurs="0" maxOccurs="1" type="file-type"/>
        <xs:element name="xml-source" minOccurs="0" maxOccurs="1" type="xml-source-type" />
        <xs:element name="json-source" type="json-source-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="empty" type="empty-result-set-type" minOccurs="0" maxOccurs="1"/>
      </xs:choice>
      <xs:element name="alteration" type="alteration-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="if-unavailable" type="if-unavailable-type" minOccurs="0" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="file" type="xs:string" use="optional" />
  </xs:complexType>
  <xs:complexType name="iteration-type">
    <xs:sequence>
      <xs:element name="sequence" type="sequence-type" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="if-unavailable-type">
    <xs:sequence>
      <xs:element name="result-set" type="result-set-type" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="empty-result-set-type">
    <xs:sequence>
      <xs:element name="column" type="definition-column-base-type" minOccurs="0" maxOccurs="unbounded"/>
    </xs:sequence>
    <xs:attribute name="column-count" type="xs:positiveInteger" use="optional" />
  </xs:complexType>
  <xs:complexType name="sequences-combination-type">
    <xs:sequence>
      <xs:element name="sequence" minOccurs="1" maxOccurs="unbounded" type="sequence-type"/>
    </xs:sequence>
    <xs:attribute name="operation">
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="cartesian-product"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
  </xs:complexType>
  <xs:complexType name="file-type">
    <xs:sequence>
      <xs:element name="path" minOccurs="1" maxOccurs="1" type="xs:string"/>
      <xs:element name="parser" minOccurs="0" maxOccurs="1" type="parser-type"/>
      <xs:element name="if-missing" minOccurs="0" maxOccurs="1" type="if-missing-type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="file-compatible-type" mixed="true">
    <xs:sequence>
      <xs:element name="path" minOccurs="0" maxOccurs="1" type="xs:string"/>
      <xs:element name="parser" minOccurs="0" maxOccurs="1" type="parser-type"/>
      <xs:element name="if-missing" minOccurs="0" maxOccurs="1" type="if-missing-type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="parser-type">
    <xs:attribute name="name" use="required" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="if-missing-type">
    <xs:sequence>
      <xs:element name="file" minOccurs="1" maxOccurs="1" type="file-type"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="scalar-type">
    <xs:sequence>
      <xs:choice>
        <xs:element name="query-scalar" type="query-scalar-type"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="alteration-type">
    <xs:sequence minOccurs="0" maxOccurs="unbounded">
      <xs:choice>
        <xs:element name="rename" type="rename-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="summarize" type="summarization-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="extend" type="extend-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="filter" type="filter-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="convert" type="convert-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="transform" type="enhanced-transformation-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="unstack" type="unstack-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="project" type="project-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="project-away" type="project-away-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="lookup-replace" type="lookup-replace-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="merge" type="merge-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="union" type="union-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="duplicate" type="duplicate-type" minOccurs="0" maxOccurs="1"/>
      </xs:choice>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="rename-type">
    <xs:sequence>
      <xs:element name="missing" minOccurs="0" maxOccurs="1">
        <xs:complexType>
          <xs:simpleContent>
            <xs:extension base="xs:string">
              <xs:attribute name="behavior">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:enumeration value="failure"/>
                    <xs:enumeration value="skip"/>
                  </xs:restriction>
                </xs:simpleType>
              </xs:attribute>
            </xs:extension>
          </xs:simpleContent>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
    <xs:attribute name="identifier" type="xs:string" use="required"/>
    <xs:attribute name="new-name" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="extend-type">
    <xs:choice minOccurs="1" maxOccurs="1">
      <xs:element name="script" type="script-extend-type" minOccurs="1" maxOccurs="1"/>
    </xs:choice>
    <xs:attribute name="identifier" type="xs:string" use="required"/>
  </xs:complexType>
  <xs:complexType name="unstack-type">
    <xs:sequence>
      <xs:element name="header" minOccurs="1" maxOccurs="1">
        <xs:complexType>
          <xs:sequence minOccurs="1" maxOccurs="1">
            <xs:element name="column" type="definition-column-base-type" minOccurs="1" maxOccurs="1"/>
            <xs:element name="enforced-value" type="xs:string" minOccurs="0" maxOccurs="unbounded" />
          </xs:sequence>
        </xs:complexType>
      </xs:element>
      <xs:element name="group-by" type="group-by-type" minOccurs="1" maxOccurs="1" />
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="convert-type">
    <xs:choice>
      <xs:element name="text-to-date" type="conversion-type" />
      <xs:element name="text-to-dateTime" type="conversion-type" />
      <xs:element name="text-to-numeric" type="conversion-type" />
    </xs:choice>
    <xs:attribute name="column" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="filtering-columns-type">
    <xs:choice>
      <xs:element name="column" type="definition-column-base-type" maxOccurs="unbounded"/>
    </xs:choice>
  </xs:complexType>
  <xs:complexType name="conversion-type">
    <xs:attribute name="culture" type="xs:string"/>
    <xs:attribute name="default-value" type="xs:string"/>
  </xs:complexType>
  <xs:complexType name="definition-column-type">
    <xs:attribute name="index" type="xs:int" use="optional" />
    <xs:attribute name="name" type="xs:string" use="optional" />
    <xs:attribute name="role" use="required" >
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="key"/>
          <xs:enumeration value="value"/>
          <xs:enumeration value="ignore"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="type" type="column-type-enum" use="optional"/>
  </xs:complexType>
  <xs:complexType name="project-type">
    <xs:sequence>
      <xs:element name="column" type="definition-column-base-type" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="project-away-type">
    <xs:sequence>
      <xs:element name="column" type="definition-column-base-type" minOccurs="1" maxOccurs="unbounded"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="merge-type">
    <xs:sequence>
      <xs:element name="result-set" type="result-set-type" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="union-type">
    <xs:sequence>
      <xs:element name="result-set" type="result-set-type" minOccurs="1" maxOccurs="1"/>
    </xs:sequence>
    <xs:attribute name="column-identity" type="column-identity-enum" use="optional"/>
  </xs:complexType>
  <xs:simpleType name="column-identity-enum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="ordinal"/>
      <xs:enumeration value="name"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="duplicate-type">
    <xs:sequence>
      <xs:element name="predicate" type="predicate-type" minOccurs="0" maxOccurs="1"/>
      <xs:element name="times" minOccurs="0" maxOccurs="1"/>
      <xs:element name="output" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:choice>
            <xs:element name="script" type="script-extend-type" minOccurs="0" maxOccurs="1"/>
            <xs:element name="value" type="xs:string" minOccurs="0" maxOccurs="1"/>
          </xs:choice>
          <xs:attribute name="identifier" use="required" type="xs:string"/>
          <xs:attribute name="class" use="required" type="output-class-enum"/>
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:simpleType name="output-class-enum">
    <xs:restriction base="xs:string">
      <xs:enumeration value="static"/>
      <xs:enumeration value="index"/>
      <xs:enumeration value="total"/>
      <xs:enumeration value="is-original"/>
      <xs:enumeration value="is-duplicable"/>
      <xs:enumeration value="script"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="definition-column-base-type">
    <xs:attribute name="identifier" type="xs:string"/>
    <xs:attribute name="type" type="column-type-enum" use="optional"/>
  </xs:complexType>
  <xs:complexType name="result-set-comparison-type">
    <xs:sequence>
      <xs:element name="column" minOccurs="0" maxOccurs="unbounded">
        <xs:complexType>
          <xs:choice>
            <xs:element name="transformation" minOccurs="0" maxOccurs="1" type="transformation-type"/>
            <xs:element name="transform" minOccurs="0" maxOccurs="1" type="transformation-type"/>
          </xs:choice>
          <xs:attribute name="index" type="xs:int" use="optional" />
          <xs:attribute name="name" type="xs:string" use="optional" />
          <xs:attribute name="role" use="required" >
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="key"/>
                <xs:enumeration value="value"/>
                <xs:enumeration value="ignore"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="tolerance" type="xs:string" use="optional" />
          <xs:attribute name="type" type="column-type-enum" use="optional"/>
          <xs:attribute name="rounding-style" use="optional">
            <xs:simpleType>
              <xs:restriction base="xs:string">
                <xs:enumeration value="none"/>
                <xs:enumeration value="floor"/>
                <xs:enumeration value="ceiling"/>
                <xs:enumeration value="round"/>
              </xs:restriction>
            </xs:simpleType>
          </xs:attribute>
          <xs:attribute name="rounding-step" type="xs:string" use="optional" />
        </xs:complexType>
      </xs:element>
      <xs:choice>
        <xs:element name="resultSet" minOccurs="0" maxOccurs="1">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="row" minOccurs="0" maxOccurs="unbounded">
                <xs:complexType>
                  <xs:sequence>
                    <xs:element name="cell" minOccurs="1" maxOccurs="unbounded">
                      <xs:complexType>
                        <xs:simpleContent>
                          <xs:extension base="xs:string">
                            <xs:attribute name="column-name" type="xs:string" use="optional" />
                          </xs:extension>
                        </xs:simpleContent>
                      </xs:complexType>
                    </xs:element>
                  </xs:sequence>
                </xs:complexType>
              </xs:element>
            </xs:sequence>
            <xs:attribute name="file" type="xs:string" use="optional" />
          </xs:complexType>
        </xs:element>
        <xs:element name="result-set" minOccurs="0" maxOccurs="1" type="result-set-type"/>
        <xs:element name="query" type="query-type" minOccurs="0" maxOccurs="1"/>
        <xs:element name="xml-source" type="xml-source-type" minOccurs="0" maxOccurs="1"/>
      </xs:choice>
    </xs:sequence>
    <xs:attribute name="behavior" use="optional" >
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="multiple-rows"/>
          <xs:enumeration value="single-row"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="keys" type="keys-set-type" use="optional" />
    <xs:attribute name="values" type="values-set-type" use="optional" />
    <xs:attribute name="values-default-type" use="optional" >
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="text"/>
          <xs:enumeration value="numeric"/>
          <xs:enumeration value="dateTime"/>
          <xs:enumeration value="boolean"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="tolerance" type="xs:string" use="optional" />
    <xs:attribute name="persistance" use="optional" >
      <xs:simpleType>
        <xs:restriction base="xs:string">
          <xs:enumeration value="never"/>
          <xs:enumeration value="only-if-failed"/>
          <xs:enumeration value="always"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="keys-names" type="xs:string" use="optional" />
    <xs:attribute name="values-names" type="xs:string" use="optional" />
  </xs:complexType>
  <xs:complexType name="equivalent-to-type">
    <xs:choice>
      <xs:sequence>
        <xs:element name="item" minOccurs="0" maxOccurs="unbounded">
          <xs:complexType>
            <xs:simpleContent>
              <xs:extension base="xs:string"/>
            </xs:simpleContent>
          </xs:complexType>
        </xs:element>
        <xs:choice minOccurs="0">
          <xs:element name="predefined" type="predefined-type"/>
          <xs:element name="range-integer" type="range-integer-type"/>
          <xs:element name="range-date" type="range-date-type"/>
          <xs:element name="range-integer-pattern" type="range-integer-pattern-type"/>
        </xs:choice>
      </xs:sequence>
      <xs:element name="one-column-query" type ="query-type"/>
      <xs:element name="members" type="members-type"/>
    </xs:choice>
    <xs:attribute name="ignore-case" type="xs:boolean" use="optional" />
    <xs:attribute name="not" type="xs:boolean" use="optional" />
  </xs:complexType>
  <xs:complexType name="faster-than-type">
    <xs:attribute name="max-time-milliSeconds" use="required" >
      <xs:simpleType>
        <xs:restriction base="xs:positiveInteger">
          <xs:maxInclusive value="2147483647"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="timeout-milliSeconds" use="optional" >
      <xs:simpleType>
        <xs:restriction base="xs:positiveInteger">
          <xs:maxInclusive value="2147483647"/>
        </xs:restriction>
      </xs:simpleType>
    </xs:attribute>
    <xs:attribute name="clean-cache" type="xs:boolean" use="optional" />
  </xs:complexType>
  <xs:simpleType name="keys-set-type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="first"/>
      <xs:enumeration value="all-except-last"/>
      <xs:enumeration value="all"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:simpleType name="values-set-type">
    <xs:restriction base="xs:string">
      <xs:enumeration value="all-except-first"/>
      <xs:enumeration value="last"/>
      <xs:enumeration value="none"/>
    </xs:restriction>
  </xs:simpleType>
  <xs:complexType name="variables-type">
    <xs:sequence>
      <xs:element name="variable" minOccurs="1" maxOccurs="unbounded">
        <xs:complexType>
          <xs:choice>
            <xs:element name="script" type="script-type"/>
            <xs:element name="query-scalar" type="query-scalar-type"/>
            <xs:element name="environment" type="environment-type"/>
            <xs:element name="custom" type="custom-type"/>
          </xs:choice>
          <xs:attribute name="name" type="xs:string" use="required" />
        </xs:complexType>
      </xs:element>
    </xs:sequence>
  </xs:complexType>
  <xs:complexType name="script-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="language" use="optional" >
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="c-sharp"/>
              <xs:enumeration value="native"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="script-extend-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="language" use="required" >
          <xs:simpleType>
            <xs:restriction base="xs:string">
              <xs:enumeration value="ncalc"/>
              <xs:enumeration value="native"/>
            </xs:restriction>
          </xs:simpleType>
        </xs:attribute>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
  <xs:complexType name="environment-type">
    <xs:simpleContent>
      <xs:extension base="xs:string">
        <xs:attribute name="name" use="required"/>
      </xs:extension>
    </xs:simpleContent>
  </xs:complexType>
</xs:schema>
